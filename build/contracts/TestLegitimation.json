{
  "contractName": "TestLegitimation",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "LegiFiles",
      "outputs": [
        {
          "name": "fileURL",
          "type": "string"
        },
        {
          "name": "hashCode",
          "type": "string"
        },
        {
          "name": "signature",
          "type": "string"
        },
        {
          "name": "timeStamp",
          "type": "uint256"
        },
        {
          "name": "isSigned",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "fileURL",
          "type": "string"
        },
        {
          "name": "hashCode",
          "type": "string"
        },
        {
          "name": "signature",
          "type": "string"
        }
      ],
      "name": "signAgreement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "signee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fileName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "hashCode",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "SignLawAgreement",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testSignAgreement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610d75806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063159adab01461005c5780634aece5c214610202578063e250c18514610219575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061030e565b6040518080602001806020018060200186815260200185151515158152602001848103845289818151815260200191508051906020019080838360005b838110156100f55780820151818401526020810190506100da565b50505050905090810190601f1680156101225780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b8381101561015b578082015181840152602081019050610140565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b838110156101c15780820151818401526020810190506101a6565b50505050905090810190601f1680156101ee5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561020e57600080fd5b50610217610519565b005b34801561022557600080fd5b5061030c600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061085d565b005b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b60608060608060405190810160405280603381526020017f68747470733a2f2f64726976652e676f6f676c652e636f6d2f6f70656e3f696481526020017f3d31323334355f616263646566672d48494a4b000000000000000000000000008152509250606060405190810160405280604081526020017f633865316630383934356562353532303839343763623163373664393131656481526020017f3864356434346237346232643032663465373336656634616566376162376338815250915060c06040519081016040528060848152602001610cc66084913990506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16156106d9576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600061069a9190610bd8565b6001820160006106aa9190610bd8565b6002820160006106ba9190610bd8565b60038201600090556004820160006101000a81549060ff021916905550505b6106e483838361085d565b826040518082805190602001908083835b60208310151561071a57805182526020820191506020810190506020830392506106f5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180828054600181600116156101000203166002900480156107e75780601f106107c55761010080835404028352918201916107e7565b820191906000526020600020905b8154815290600101906020018083116107d3575b505091505060405180910390206000191614151561080157fe5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151561085857fe5b505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151515610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f46696c65207369676e656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000835111151561093157600080fd5b6000825111151561094157600080fd5b6000815111151561095157600080fd5b60a060405190810160405280848152602001838152602001828152602001428152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906109d6929190610c20565b5060208201518160010190805190602001906109f3929190610c20565b506040820151816002019080519060200190610a10929190610c20565b506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167ffc1b6bdf5e8cb6fb293ae1be4b0fc5a2f6ff21f2a9565ff5c816e91d13bba78f8484844260405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610ac8578082015181840152602081019050610aad565b50505050905090810190601f168015610af55780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610b2e578082015181840152602081019050610b13565b50505050905090810190601f168015610b5b5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610b94578082015181840152602081019050610b79565b50505050905090810190601f168015610bc15780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a2505050565b50805460018160011615610100020316600290046000825580601f10610bfe5750610c1d565b601f016020900490600052602060002090810190610c1c9190610ca0565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c6157805160ff1916838001178555610c8f565b82800160010185558215610c8f579182015b82811115610c8e578251825591602001919060010190610c73565b5b509050610c9c9190610ca0565b5090565b610cc291905b80821115610cbe576000816000905550600101610ca6565b5090565b905600307864343264643139393630663730666563646235303937373536383134366161343665333363396334326136323035643038666430333536623463306637663130353932636363306632393164383430366662356437363039666264326434626363373262613238663763383462343065356361336438316435343432653161393162a165627a7a72305820dcadfa0e1f620febc589f1c2880425daebdc84805fcbfb50c79439c40a3d82320029",
  "deployedBytecode": "0x608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063159adab01461005c5780634aece5c214610202578063e250c18514610219575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061030e565b6040518080602001806020018060200186815260200185151515158152602001848103845289818151815260200191508051906020019080838360005b838110156100f55780820151818401526020810190506100da565b50505050905090810190601f1680156101225780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b8381101561015b578082015181840152602081019050610140565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b838110156101c15780820151818401526020810190506101a6565b50505050905090810190601f1680156101ee5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561020e57600080fd5b50610217610519565b005b34801561022557600080fd5b5061030c600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061085d565b005b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b60608060608060405190810160405280603381526020017f68747470733a2f2f64726976652e676f6f676c652e636f6d2f6f70656e3f696481526020017f3d31323334355f616263646566672d48494a4b000000000000000000000000008152509250606060405190810160405280604081526020017f633865316630383934356562353532303839343763623163373664393131656481526020017f3864356434346237346232643032663465373336656634616566376162376338815250915060c06040519081016040528060848152602001610cc66084913990506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16156106d9576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600061069a9190610bd8565b6001820160006106aa9190610bd8565b6002820160006106ba9190610bd8565b60038201600090556004820160006101000a81549060ff021916905550505b6106e483838361085d565b826040518082805190602001908083835b60208310151561071a57805182526020820191506020810190506020830392506106f5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180828054600181600116156101000203166002900480156107e75780601f106107c55761010080835404028352918201916107e7565b820191906000526020600020905b8154815290600101906020018083116107d3575b505091505060405180910390206000191614151561080157fe5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151561085857fe5b505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151515610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f46696c65207369676e656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000835111151561093157600080fd5b6000825111151561094157600080fd5b6000815111151561095157600080fd5b60a060405190810160405280848152602001838152602001828152602001428152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906109d6929190610c20565b5060208201518160010190805190602001906109f3929190610c20565b506040820151816002019080519060200190610a10929190610c20565b506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167ffc1b6bdf5e8cb6fb293ae1be4b0fc5a2f6ff21f2a9565ff5c816e91d13bba78f8484844260405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610ac8578082015181840152602081019050610aad565b50505050905090810190601f168015610af55780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610b2e578082015181840152602081019050610b13565b50505050905090810190601f168015610b5b5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610b94578082015181840152602081019050610b79565b50505050905090810190601f168015610bc15780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a2505050565b50805460018160011615610100020316600290046000825580601f10610bfe5750610c1d565b601f016020900490600052602060002090810190610c1c9190610ca0565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c6157805160ff1916838001178555610c8f565b82800160010185558215610c8f579182015b82811115610c8e578251825591602001919060010190610c73565b5b509050610c9c9190610ca0565b5090565b610cc291905b80821115610cbe576000816000905550600101610ca6565b5090565b905600307864343264643139393630663730666563646235303937373536383134366161343665333363396334326136323035643038666430333536623463306637663130353932636363306632393164383430366662356437363039666264326434626363373262613238663763383462343065356361336438316435343432653161393162a165627a7a72305820dcadfa0e1f620febc589f1c2880425daebdc84805fcbfb50c79439c40a3d82320029",
  "sourceMap": "147:750:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;147:750:10;;;;;;;",
  "deployedSourceMap": "147:750:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:46:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;352:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;352:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;352:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;195:700:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;195:700:10;;;;;;742:403:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:403:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;195:700:10:-;241:21;328:22;429:23;241:77;;;;;;;;;;;;;;;;;;;;;;;;;328:91;;;;;;;;;;;;;;;;;;;;;;;;;429:160;;;;;;;;;;;;;;;;;;;;603:9;:21;613:10;603:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;599:76;;;654:9;:21;664:10;654:21;;;;;;;;;;;;;;;;647:28;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;599:76;694:43;708:7;717:8;727:9;694:13;:43::i;:::-;830:7;814:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;814:25:10;;;;;;;;;;;;;;;;763:76;;;779:9;:21;789:10;779:21;;;;;;;;;;;;;;;:29;;763:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:76;;;;756:84;;;;;;857:9;:21;867:10;857:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;850:38;;;;;;195:700;;;:::o;742:403:2:-;445:9;:21;455:10;445:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;444:31;436:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:1;865:7;859:21;:25;851:34;;;;;;;;928:1;909:8;903:22;:26;895:35;;;;;;;;974:1;954:9;948:23;:27;940:36;;;;;;;;1011:49;;;;;;;;;1020:7;1011:49;;;;1029:8;1011:49;;;;1039:9;1011:49;;;;1050:3;1011:49;;;;1055:4;1011:49;;;;;987:9;:21;997:10;987:21;;;;;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:10;1075:63;;;1104:7;1113:8;1123:9;1134:3;1075:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1075:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1075:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1075:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:403;;;:::o;147:750:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/* For HealthChainHack, Sep 2018\n * Author: Xinghua Liang\n * Copyright: BlockTEST LLC\n */\n pragma solidity ^0.4.24;\n\nimport \"./Legitimation.sol\";\n\ncontract TestLegitimation is Legitimation {\n    function testSignAgreement() public {\n        string memory fileURL = \"https://drive.google.com/open?id=12345_abcdefg-HIJK\";\n        string memory hashCode = \"c8e1f08945eb55208947cb1c76d911ed8d5d44b74b2d02f4e736ef4aef7ab7c8\";\n        string memory signature = \"0xd42dd19960f70fecdb50977568146aa46e33c9c42a6205d08fd0356b4c0f7f10592ccc0f291d8406fb5d7609fbd2d4bcc72ba28f7c84b40e5ca3d81d5442e1a91b\";\n        if (LegiFiles[msg.sender].isSigned)\n            delete LegiFiles[msg.sender];\n        \n        signAgreement(fileURL, hashCode, signature);\n        \n        assert(keccak256(bytes(LegiFiles[msg.sender].fileURL)) == keccak256(bytes(fileURL)));\n        assert(LegiFiles[msg.sender].isSigned);\n    }\n}\n",
  "sourcePath": "/home/ec2-user/healthchainhack-deployable/contracts/TestLegitimation.sol",
  "ast": {
    "absolutePath": "/home/ec2-user/healthchainhack-deployable/contracts/TestLegitimation.sol",
    "exportedSymbols": {
      "TestLegitimation": [
        2037
      ]
    },
    "id": 2038,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1973,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "91:24:10"
      },
      {
        "absolutePath": "/home/ec2-user/healthchainhack-deployable/contracts/Legitimation.sol",
        "file": "./Legitimation.sol",
        "id": 1974,
        "nodeType": "ImportDirective",
        "scope": 2038,
        "sourceUnit": 403,
        "src": "117:28:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1975,
              "name": "Legitimation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 402,
              "src": "176:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Legitimation_$402",
                "typeString": "contract Legitimation"
              }
            },
            "id": 1976,
            "nodeType": "InheritanceSpecifier",
            "src": "176:12:10"
          }
        ],
        "contractDependencies": [
          402
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2037,
        "linearizedBaseContracts": [
          2037,
          402
        ],
        "name": "TestLegitimation",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2035,
              "nodeType": "Block",
              "src": "231:664:10",
              "statements": [
                {
                  "assignments": [
                    1980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1980,
                      "name": "fileURL",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "241:21:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1979,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1982,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f64726976652e676f6f676c652e636f6d2f6f70656e3f69643d31323334355f616263646566672d48494a4b",
                    "id": 1981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "265:53:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_deb95da56fa8f3e70e86bd5152892d6c45630f1229608b288a6f2bc63bb71977",
                      "typeString": "literal_string \"https://drive.google.com/open?id=12345_abcdefg-HIJK\""
                    },
                    "value": "https://drive.google.com/open?id=12345_abcdefg-HIJK"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "241:77:10"
                },
                {
                  "assignments": [
                    1984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1984,
                      "name": "hashCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "328:22:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1983,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "328:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1986,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "63386531663038393435656235353230383934376362316337366439313165643864356434346237346232643032663465373336656634616566376162376338",
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "353:66:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ea4ef83d64a6d2e9de26ef3663157097458166feaf884fac9b6d189bf852aa1e",
                      "typeString": "literal_string \"c8e1f08945eb55208947cb1c76d911ed8d5d44b74b2d02f4e736ef4aef7ab7c8\""
                    },
                    "value": "c8e1f08945eb55208947cb1c76d911ed8d5d44b74b2d02f4e736ef4aef7ab7c8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "328:91:10"
                },
                {
                  "assignments": [
                    1988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1988,
                      "name": "signature",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "429:23:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1987,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "429:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1990,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "307864343264643139393630663730666563646235303937373536383134366161343665333363396334326136323035643038666430333536623463306637663130353932636363306632393164383430366662356437363039666264326434626363373262613238663763383462343065356361336438316435343432653161393162",
                    "id": 1989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "455:134:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f346655872d1bf96a97dc42a455c4134eb275a2aa6a4cdef7fd265b3eb630cb6",
                      "typeString": "literal_string \"0xd42dd19960f70fecdb50977568146aa46e33c9c42a6205d08fd0356b4c0f7f10592ccc0f291d8406fb5d7609fbd2d4bcc72ba28f7c84b40e5ca3d81d5442e1a91b\""
                    },
                    "value": "0xd42dd19960f70fecdb50977568146aa46e33c9c42a6205d08fd0356b4c0f7f10592ccc0f291d8406fb5d7609fbd2d4bcc72ba28f7c84b40e5ca3d81d5442e1a91b"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "429:160:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1991,
                        "name": "LegiFiles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "603:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                          "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                        }
                      },
                      "id": 1994,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1992,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2801,
                          "src": "613:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "613:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "603:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                        "typeString": "struct Legitimation.LegiFile storage ref"
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isSigned",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 309,
                    "src": "603:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2002,
                  "nodeType": "IfStatement",
                  "src": "599:76:10",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "647:28:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1996,
                          "name": "LegiFiles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "654:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                            "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                          }
                        },
                        "id": 1999,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1997,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "664:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "664:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "654:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                          "typeString": "struct Legitimation.LegiFile storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2001,
                    "nodeType": "ExpressionStatement",
                    "src": "647:28:10"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2004,
                        "name": "fileURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1980,
                        "src": "708:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2005,
                        "name": "hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "717:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2006,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "727:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2003,
                      "name": "signAgreement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "694:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "694:43:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2012,
                                      "name": "LegiFiles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 314,
                                      "src": "779:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                                        "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                                      }
                                    },
                                    "id": 2015,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2013,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2801,
                                        "src": "789:3:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2014,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "789:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "779:21:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                                      "typeString": "struct Legitimation.LegiFile storage ref"
                                    }
                                  },
                                  "id": 2016,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fileURL",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 301,
                                  "src": "779:29:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 2011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "773:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 2017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "773:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "id": 2010,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "763:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 2018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "763:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2021,
                                  "name": "fileURL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1980,
                                  "src": "830:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "824:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 2022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "824:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2019,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "814:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 2023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "814:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "763:76:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2009,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "756:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:84:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2026,
                  "nodeType": "ExpressionStatement",
                  "src": "756:84:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2028,
                            "name": "LegiFiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "857:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                              "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                            }
                          },
                          "id": 2031,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2029,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2801,
                              "src": "867:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "867:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "857:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                            "typeString": "struct Legitimation.LegiFile storage ref"
                          }
                        },
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSigned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 309,
                        "src": "857:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2027,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "850:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "850:38:10"
                }
              ]
            },
            "documentation": null,
            "id": 2036,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "testSignAgreement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:0:10"
            },
            "scope": 2037,
            "src": "195:700:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2038,
        "src": "147:750:10"
      }
    ],
    "src": "91:807:10"
  },
  "legacyAST": {
    "absolutePath": "/home/ec2-user/healthchainhack-deployable/contracts/TestLegitimation.sol",
    "exportedSymbols": {
      "TestLegitimation": [
        2037
      ]
    },
    "id": 2038,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1973,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "91:24:10"
      },
      {
        "absolutePath": "/home/ec2-user/healthchainhack-deployable/contracts/Legitimation.sol",
        "file": "./Legitimation.sol",
        "id": 1974,
        "nodeType": "ImportDirective",
        "scope": 2038,
        "sourceUnit": 403,
        "src": "117:28:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1975,
              "name": "Legitimation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 402,
              "src": "176:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Legitimation_$402",
                "typeString": "contract Legitimation"
              }
            },
            "id": 1976,
            "nodeType": "InheritanceSpecifier",
            "src": "176:12:10"
          }
        ],
        "contractDependencies": [
          402
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2037,
        "linearizedBaseContracts": [
          2037,
          402
        ],
        "name": "TestLegitimation",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2035,
              "nodeType": "Block",
              "src": "231:664:10",
              "statements": [
                {
                  "assignments": [
                    1980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1980,
                      "name": "fileURL",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "241:21:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1979,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1982,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f64726976652e676f6f676c652e636f6d2f6f70656e3f69643d31323334355f616263646566672d48494a4b",
                    "id": 1981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "265:53:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_deb95da56fa8f3e70e86bd5152892d6c45630f1229608b288a6f2bc63bb71977",
                      "typeString": "literal_string \"https://drive.google.com/open?id=12345_abcdefg-HIJK\""
                    },
                    "value": "https://drive.google.com/open?id=12345_abcdefg-HIJK"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "241:77:10"
                },
                {
                  "assignments": [
                    1984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1984,
                      "name": "hashCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "328:22:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1983,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "328:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1986,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "63386531663038393435656235353230383934376362316337366439313165643864356434346237346232643032663465373336656634616566376162376338",
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "353:66:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ea4ef83d64a6d2e9de26ef3663157097458166feaf884fac9b6d189bf852aa1e",
                      "typeString": "literal_string \"c8e1f08945eb55208947cb1c76d911ed8d5d44b74b2d02f4e736ef4aef7ab7c8\""
                    },
                    "value": "c8e1f08945eb55208947cb1c76d911ed8d5d44b74b2d02f4e736ef4aef7ab7c8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "328:91:10"
                },
                {
                  "assignments": [
                    1988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1988,
                      "name": "signature",
                      "nodeType": "VariableDeclaration",
                      "scope": 2036,
                      "src": "429:23:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1987,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "429:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1990,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "307864343264643139393630663730666563646235303937373536383134366161343665333363396334326136323035643038666430333536623463306637663130353932636363306632393164383430366662356437363039666264326434626363373262613238663763383462343065356361336438316435343432653161393162",
                    "id": 1989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "455:134:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f346655872d1bf96a97dc42a455c4134eb275a2aa6a4cdef7fd265b3eb630cb6",
                      "typeString": "literal_string \"0xd42dd19960f70fecdb50977568146aa46e33c9c42a6205d08fd0356b4c0f7f10592ccc0f291d8406fb5d7609fbd2d4bcc72ba28f7c84b40e5ca3d81d5442e1a91b\""
                    },
                    "value": "0xd42dd19960f70fecdb50977568146aa46e33c9c42a6205d08fd0356b4c0f7f10592ccc0f291d8406fb5d7609fbd2d4bcc72ba28f7c84b40e5ca3d81d5442e1a91b"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "429:160:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1991,
                        "name": "LegiFiles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "603:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                          "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                        }
                      },
                      "id": 1994,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1992,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2801,
                          "src": "613:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "613:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "603:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                        "typeString": "struct Legitimation.LegiFile storage ref"
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isSigned",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 309,
                    "src": "603:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2002,
                  "nodeType": "IfStatement",
                  "src": "599:76:10",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "647:28:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1996,
                          "name": "LegiFiles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "654:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                            "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                          }
                        },
                        "id": 1999,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1997,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "664:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "664:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "654:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                          "typeString": "struct Legitimation.LegiFile storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2001,
                    "nodeType": "ExpressionStatement",
                    "src": "647:28:10"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2004,
                        "name": "fileURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1980,
                        "src": "708:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2005,
                        "name": "hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "717:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2006,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "727:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2003,
                      "name": "signAgreement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "694:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "694:43:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2012,
                                      "name": "LegiFiles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 314,
                                      "src": "779:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                                        "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                                      }
                                    },
                                    "id": 2015,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2013,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2801,
                                        "src": "789:3:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2014,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "789:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "779:21:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                                      "typeString": "struct Legitimation.LegiFile storage ref"
                                    }
                                  },
                                  "id": 2016,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fileURL",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 301,
                                  "src": "779:29:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 2011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "773:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 2017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "773:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "id": 2010,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "763:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 2018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "763:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2021,
                                  "name": "fileURL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1980,
                                  "src": "830:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "824:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 2022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "824:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2019,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "814:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 2023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "814:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "763:76:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2009,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "756:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:84:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2026,
                  "nodeType": "ExpressionStatement",
                  "src": "756:84:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2028,
                            "name": "LegiFiles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "857:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LegiFile_$310_storage_$",
                              "typeString": "mapping(address => struct Legitimation.LegiFile storage ref)"
                            }
                          },
                          "id": 2031,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2029,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2801,
                              "src": "867:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "867:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "857:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LegiFile_$310_storage",
                            "typeString": "struct Legitimation.LegiFile storage ref"
                          }
                        },
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSigned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 309,
                        "src": "857:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2027,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "850:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "850:38:10"
                }
              ]
            },
            "documentation": null,
            "id": 2036,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "testSignAgreement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:0:10"
            },
            "scope": 2037,
            "src": "195:700:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2038,
        "src": "147:750:10"
      }
    ],
    "src": "91:807:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-02-22T14:52:44.941Z"
}